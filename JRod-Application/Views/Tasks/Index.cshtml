@using JRod_Application.Enums;

@model IEnumerable<IGrouping<JRodTasksStatus, JRod_Application.Models.Task>>

@{
    ViewData["Title"] = "Index";
}

<main class="content">
    <div class="container p-0">

        <h1 class="h3 mb-3">Sprint Board</h1>

        <div class="row">
            @foreach (var status in ViewBag.Statuses)
            {

                Enum.TryParse(status.ToString(), out JRodTasksStatus statusEnum);

                var tasksByStatus = Model.FirstOrDefault(x => x.Key == statusEnum).AsEnumerable() ?? new List<JRod_Application.Models.Task>();

                <div class="col-12 col-lg-6 col-xl-3">
                    <div class="card card-border-primary">
                        <div class="card-header">
                            @*<div class="card-actions float-right">
                                    <div class="dropdown show">
                                        <a href="#" data-toggle="dropdown" data-display="static">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-horizontal align-middle">
                                                <circle cx="12" cy="12" r="1"></circle>
                                                <circle cx="19" cy="12" r="1"></circle>
                                                <circle cx="5" cy="12" r="1"></circle>
                                            </svg>
                                        </a>

                                        <div class="dropdown-menu dropdown-menu-right">
                                            <a class="dropdown-item" href="#">Action</a>
                                            <a class="dropdown-item" href="#">Another action</a>
                                            <a class="dropdown-item" href="#">Something else here</a>
                                        </div>
                                    </div>
                                </div>*@
                            <h5 class="card-title">@status</h5>
                        </div>
                        <div class="card-body p-3">

                            @foreach (var task in tasksByStatus)
                            {
                                <div class="card mb-3 bg-light">
                                    <div class="card-body p-3">
                                        <div class="float-right mr-n2">
                                            <label class="custom-control custom-checkbox">
                                                <input type="checkbox" class="custom-control-input" checked="">
                                                <span class="custom-control-label"></span>
                                            </label>
                                        </div>
                                        <p>@task.Title</p>
                                        <div class="float-right mt-n1">
                                            @{var avatar = task.User.Avatar;}
                                            <img src="@avatar" width="32" height="32" class="rounded-circle" alt="Avatar">
                                        </div>
                                        <a class="btn btn-outline-primary btn-sm" href="#">View</a>
                                    </div>
                                </div>
                            }

                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modal-create">
                                Criar Task
                            </button>

                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="modal fade" id="modal-create" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    @{
                        Html.RenderPartial("Create", null, null);
                    }
                </div>
            </div>
        </div>

    </div>
</main>
